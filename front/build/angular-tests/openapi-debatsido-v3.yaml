# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.0

#######################
# Optional info section
#######################
info:
  title: Débats IDO API
  description: API of Débats IDO Project
  version: '1.0.0'

servers:
  - url: /
    description: Optional server description, e.g. Internal staging server for testing

components:

  ####################
  # Security
  ####################
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: API_KEY  # name of the header, query parameter or cookie

  ####################
  # Common data models
  ####################
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    QuoteModel:
      type: object
      required:
        - id
        - name
        - text
        - type
        - complete
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        text:
          type: string
        type:
          type: string
        complete:
          type: number
          format: float
      example:
        id: 42
        name: Une réduction de la pauvreté
        text: Permet de réduire drastiquement le nombre de personnes vivant sous le seuil de pauvreté
        type: Opinion
        complete: 0

    QuoteNewModel:
      type: object
      required:
        - name
        - text
        - type
        - complete
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        text:
          type: string
        type:
          type: string
        complete:
          type: number
          format: float
      example:
        name: Une réduction de la pauvreté
        text: Permet de réduire drastiquement le nombre de personnes vivant sous le seuil de pauvreté
        type: Opinion
        complete: 0

    ReferenceModel:
      type: object
      required:
        - id
        - name
        - title
        - link
        - nature
        - date
        - reliability
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        link:
          type: string
        nature:
          type: string
        date:
          type: string
        reliability:
          type: integer
          format: int32
      example:
        id: 42
        name: Baptiste Mylondo
        title: Un revenu pour tous ! Précis d'utopie réaliste.
        link: https://www.revenudebase.info/wp-content/uploads/2012/07/Mylondo-Baptiste_precise-utopie-realiste.pdf
        nature: Précis
        date: "2010-01-01"
        reliability: 50

    ReferenceNewModel:
      type: object
      required:
        - name
        - title
        - link
        - nature
        - date
        - reliability
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        link:
          type: string
        nature:
          type: string
        date:
          type: string
        reliability:
          type: integer
          format: int32
      example:
        name: Baptiste Mylondo
        title: Un revenu pour tous ! Précis d'utopie réaliste.
        link: https://www.revenudebase.info/wp-content/uploads/2012/07/Mylondo-Baptiste_precise-utopie-realiste.pdf
        nature: Précis
        date: "2010-01-01"
        reliability: 50



  ####################
  # Common parameters
  ####################
  parameters:
    idQuoteParam:
      name: idQuote
      in: path
      required: true
      schema:
        type: integer
        minimum: 0
      description: The Id of a Quote
    idReferenceParam:
      name: idReference
      in: path
      required: true
      schema:
        type: integer
        minimum: 0
      description: The Id of a Quote
    offsetParam:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before returning the results
    limitParam:
      in: query
      name: limit
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 20
      description: The number of items to return

  #######################
  # Common request bodies
  #######################
  requestBodies:
    newQuoteItem:
      description: A JSON object containing quote data
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteNewModel'
    newReferenceItem:
      description: A JSON object containing reference data
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceNewModel'

  ####################
  # Common responses
  ####################
  responses:
    GeneralError:
      description: An error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

    Quote:
      description: A quote
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

    QuoteList:
      description: A list of quotes
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

    Reference:
      description: A reference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

    ReferenceList:
      description: A list of references
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReferenceModel'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'

  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers:
    X-RateLimit-Limit:
      description: Request limit per hour
      schema:
        type: integer
      example: 100
    X-RateLimit-Remaining:
      description: Remaining requests for the hour
      schema:
        type: integer
      example: 94

#######################
# Security
#######################
security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes

#######################
# Common path items
#######################
paths:
  /quotes:
    get:
      summary: Get all quotes
      description: This operation supports pagination
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of quotes
        default:
          $ref: '#/components/responses/QuoteList'
    post:
      summary: Add a new quote
      tags:
        - Quotes
      requestBody:
        $ref: '#/components/requestBodies/newQuoteItem'
      responses:
        '201':
          description: Created
  /quotes/{idQuote}/:
    get:
      summary: Get one specific quote
      description: Test
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/idQuoteParam'
      responses:
        '200':
          description: A specific quote
        default:
          $ref: '#/components/responses/Quote'
    delete:
      summary: Delete one specific quote
      description: Test
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/idQuoteParam'
      responses:
        '200':
          description: Quote successfully deleted
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/GeneralError'
  /quotes/{idQuote}/childs:
    get:
      summary: Get list of childs of specific quote
      description: This operation supports pagination
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/idQuoteParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of childs quotes
        default:
          $ref: '#/components/responses/QuoteList'
  /quotes/{idQuote}/parents:
    get:
      summary: Get list of parents of specific quote
      description: This operation supports pagination
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/idQuoteParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of parents quotes
        default:
          $ref: '#/components/responses/QuoteList'
  /quotes/{idQuote}/references:
    get:
      summary: Get list of references of specific quote
      description: This operation supports pagination
      tags:
        - Quotes
        - References
      parameters:
        - $ref: '#/components/parameters/idQuoteParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of references
        default:
          $ref: '#/components/responses/ReferenceList'

  /references:
    get:
      summary: Get all references
      description: This operation supports pagination
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of references
        default:
          $ref: '#/components/responses/ReferenceList'
    post:
      summary: Add a new reference
      tags:
        - References
      requestBody:
        $ref: '#/components/requestBodies/newReferenceItem'
      responses:
        '201':
          description: Created
  /references/{idReference}/:
    get:
      summary: Get one specific reference
      description: Test
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/idReferenceParam'
      responses:
        '200':
          description: A specific reference
        default:
          $ref: '#/components/responses/Reference'
    delete:
      summary: Delete one specific reference
      description: Test
      tags:
        - References
      parameters:
        - $ref: '#/components/parameters/idReferenceParam'
      responses:
        '200':
          description: Reference successfully deleted
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/GeneralError'
