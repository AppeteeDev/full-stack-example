swagger: '2.0'
info:
  title: DB App
  description: exposed app
  termsOfService: ''
  version: '0.0'
host: '0.0.0.0:7000'
basePath: /api
paths:
  /company/:
    get:
      tags:
        - company
      summary: Retrieve a collection of Company objects
      parameters:
        - default: protagonist
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Company relationships to include (csv)
        - default: 'protagonistID,siret,dateUpdate'
          type: string
          name: 'fields[Company]'
          in: query
          format: string
          required: false
          description: Company fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'protagonistID,siret,dateUpdate,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[protagonistID]'
          in: query
          format: string
          required: false
          description: protagonistID
        - default: ''
          type: string
          name: 'filter[siret]'
          in: query
          format: string
          required: false
          description: siret
        - default: ''
          type: string
          name: 'filter[dateUpdate]'
          in: query
          format: string
          required: false
          description: dateUpdate
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Company filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Company_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Company from company
      operationId: RetrieveaCompanyobject_0
    post:
      tags:
        - company
      summary: Create Company
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Company attributes
          schema:
            $ref: '#/definitions/Company_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateCompany_0
  /company/search:
    post:
      tags:
        - company
      description: Invoke Company.search
      summary: Invoke Company.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Company_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Company_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeCompanysearch_0
  '/company/{CompanyId}/':
    get:
      tags:
        - company
      summary: Retrieve a Company object
      parameters:
        - default: protagonist
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Company relationships to include (csv)
        - default: 'protagonistID,siret,dateUpdate'
          type: string
          name: 'fields[Company]'
          in: query
          format: string
          required: false
          description: Company fields to include (csv)
        - name: CompanyId
          in: path
          type: string
          default: ''
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Company from company
      operationId: RetrieveaCompanyobject_1
    patch:
      tags:
        - company
      parameters:
        - name: CompanyId
          in: path
          type: string
          default: ''
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Company attributes
          schema:
            $ref: '#/definitions/Company_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Company
      description: Update Company attributes
      operationId: UpdateCompany_0
    delete:
      tags:
        - company
      parameters:
        - name: CompanyId
          in: path
          type: string
          default: ''
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Company from company
      operationId: DeleteCompanyfromcompany_0
  '/company/{CompanyId}/protagonist':
    get:
      tags:
        - company
      summary: Retrieve Protagonist from protagonist
      description: Retrieve Protagonist items from the Company protagonist "to-one" relationship
      parameters:
        - default: 'quote,reference'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Protagonist relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Protagonist]'
          in: query
          format: string
          required: false
          description: Protagonist fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Protagonist filter
        - name: CompanyId
          in: path
          type: string
          default: ''
          description: Company item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveProtagonistfromprotagonist_0
    post:
      tags:
        - company
      summary: Add Protagonist items to protagonist
      description: Add Protagonist items to the Company protagonist "to-one" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: CompanyId
          in: path
          type: string
          default: ''
          description: Company item
          required: true
        - name: Company.protagonist body
          in: body
          description: Company.protagonist POST model
          schema:
            $ref: '#/definitions/Company.protagonist_Relationship1'
          required: true
      operationId: AddProtagonistitemstoprotagonist_0
    patch:
      tags:
        - company
      summary: Update protagonist
      description: Update the Company protagonist "to-one" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: CompanyId
          in: path
          type: string
          default: ''
          description: Company item
          required: true
        - name: Company.protagonist body
          in: body
          description: Company.protagonist POST model
          schema:
            $ref: '#/definitions/Company.protagonist_Relationship'
          required: true
      operationId: Updateprotagonist_0
    delete:
      tags:
        - company
      summary: Delete Protagonist from protagonist
      description: Delete Protagonist items from the Company protagonist "to-one" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: CompanyId
          in: path
          type: string
          default: ''
          description: Company item
          required: true
        - name: Company.protagonist body
          in: body
          description: Company.protagonist POST model
          schema:
            $ref: '#/definitions/Company.protagonist_Relationship1'
          required: true
      operationId: DeleteProtagonistfromprotagonist_0
  /person/:
    get:
      tags:
        - person
      summary: Retrieve a collection of Person objects
      parameters:
        - default: protagonist
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Person relationships to include (csv)
        - default: 'protagonistID,surname,role,dateUpdate'
          type: string
          name: 'fields[Person]'
          in: query
          format: string
          required: false
          description: Person fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'protagonistID,surname,role,dateUpdate,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[protagonistID]'
          in: query
          format: string
          required: false
          description: protagonistID
        - default: ''
          type: string
          name: 'filter[surname]'
          in: query
          format: string
          required: false
          description: surname
        - default: ''
          type: string
          name: 'filter[role]'
          in: query
          format: string
          required: false
          description: role
        - default: ''
          type: string
          name: 'filter[dateUpdate]'
          in: query
          format: string
          required: false
          description: dateUpdate
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Person filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Person_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Person from person
      operationId: RetrieveaPersonobject_0
    post:
      tags:
        - person
      summary: Create Person
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Person attributes
          schema:
            $ref: '#/definitions/Person_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreatePerson_0
  /person/search:
    post:
      tags:
        - person
      description: Invoke Person.search
      summary: Invoke Person.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Person_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Person_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokePersonsearch_0
  '/person/{PersonId}/':
    get:
      tags:
        - person
      summary: Retrieve a Person object
      parameters:
        - default: protagonist
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Person relationships to include (csv)
        - default: 'protagonistID,surname,role,dateUpdate'
          type: string
          name: 'fields[Person]'
          in: query
          format: string
          required: false
          description: Person fields to include (csv)
        - name: PersonId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Person from person
      operationId: RetrieveaPersonobject_1
    patch:
      tags:
        - person
      parameters:
        - name: PersonId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Person attributes
          schema:
            $ref: '#/definitions/Person_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Person
      description: Update Person attributes
      operationId: UpdatePerson_0
    delete:
      tags:
        - person
      parameters:
        - name: PersonId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Person from person
      operationId: DeletePersonfromperson_0
  '/person/{PersonId}/protagonist':
    get:
      tags:
        - person
      summary: Retrieve Protagonist from protagonist
      description: Retrieve Protagonist items from the Person protagonist "to-one" relationship
      parameters:
        - default: 'quote,reference'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Protagonist relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Protagonist]'
          in: query
          format: string
          required: false
          description: Protagonist fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Protagonist filter
        - name: PersonId
          in: path
          type: string
          default: 1
          description: Person item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveProtagonistfromprotagonist_1
    post:
      tags:
        - person
      summary: Add Protagonist items to protagonist
      description: Add Protagonist items to the Person protagonist "to-one" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: PersonId
          in: path
          type: string
          default: 1
          description: Person item
          required: true
        - name: Person.protagonist body
          in: body
          description: Person.protagonist POST model
          schema:
            $ref: '#/definitions/Person.protagonist_Relationship1'
          required: true
      operationId: AddProtagonistitemstoprotagonist_1
    patch:
      tags:
        - person
      summary: Update protagonist
      description: Update the Person protagonist "to-one" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: PersonId
          in: path
          type: string
          default: 1
          description: Person item
          required: true
        - name: Person.protagonist body
          in: body
          description: Person.protagonist POST model
          schema:
            $ref: '#/definitions/Person.protagonist_Relationship'
          required: true
      operationId: Updateprotagonist_1
    delete:
      tags:
        - person
      summary: Delete Protagonist from protagonist
      description: Delete Protagonist items from the Person protagonist "to-one" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: PersonId
          in: path
          type: string
          default: 1
          description: Person item
          required: true
        - name: Person.protagonist body
          in: body
          description: Person.protagonist POST model
          schema:
            $ref: '#/definitions/Person.protagonist_Relationship1'
          required: true
      operationId: DeleteProtagonistfromprotagonist_1
  /protagonist/:
    get:
      tags:
        - protagonist
      summary: Retrieve a collection of Protagonist objects
      parameters:
        - default: 'quote,reference'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Protagonist relationships to include (csv)
        - default: 'Type,name,link,photo,dateUpdate'
          type: string
          name: 'fields[Protagonist]'
          in: query
          format: string
          required: false
          description: Protagonist fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'Type,name,link,photo,dateUpdate,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[Type]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: 'filter[name]'
          in: query
          format: string
          required: false
          description: name
        - default: ''
          type: string
          name: 'filter[link]'
          in: query
          format: string
          required: false
          description: link
        - default: ''
          type: string
          name: 'filter[photo]'
          in: query
          format: string
          required: false
          description: photo
        - default: ''
          type: string
          name: 'filter[dateUpdate]'
          in: query
          format: string
          required: false
          description: dateUpdate
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Protagonist filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Protagonist_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Protagonist from protagonist
      operationId: RetrieveaProtagonistobject_0
    post:
      tags:
        - protagonist
      summary: Create Protagonist
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Protagonist attributes
          schema:
            $ref: '#/definitions/Protagonist_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateProtagonist_0
  /protagonist/search:
    post:
      tags:
        - protagonist
      description: Invoke Protagonist.search
      summary: Invoke Protagonist.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Protagonist_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Protagonist_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeProtagonistsearch_0
  '/protagonist/{ProtagonistId}/':
    get:
      tags:
        - protagonist
      summary: Retrieve a Protagonist object
      parameters:
        - default: 'quote,reference'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Protagonist relationships to include (csv)
        - default: 'Type,name,link,photo,dateUpdate'
          type: string
          name: 'fields[Protagonist]'
          in: query
          format: string
          required: false
          description: Protagonist fields to include (csv)
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Protagonist from protagonist
      operationId: RetrieveaProtagonistobject_1
    patch:
      tags:
        - protagonist
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Protagonist attributes
          schema:
            $ref: '#/definitions/Protagonist_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Protagonist
      description: Update Protagonist attributes
      operationId: UpdateProtagonist_0
    delete:
      tags:
        - protagonist
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Protagonist from protagonist
      operationId: DeleteProtagonistfromprotagonist_2
  '/protagonist/{ProtagonistId}/quote':
    get:
      tags:
        - protagonist
      summary: Retrieve Quote from quote
      description: Retrieve Quote items from the Protagonist quote "to-many" relationship
      parameters:
        - default: 'quoteType,reference,theme'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Quote relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Quote]'
          in: query
          format: string
          required: false
          description: Quote fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Quote filter
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveQuotefromquote_0
    post:
      tags:
        - protagonist
      summary: Add Quote items to quote
      description: Add Quote items to the Protagonist quote "to-many" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.quote body
          in: body
          description: Protagonist.quote POST model
          schema:
            $ref: '#/definitions/Protagonist.quote_Relationship1'
          required: true
      operationId: AddQuoteitemstoquote_0
    patch:
      tags:
        - protagonist
      summary: Update quote
      description: Update the Protagonist quote "to-many" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.quote body
          in: body
          description: Protagonist.quote POST model
          schema:
            $ref: '#/definitions/Protagonist.quote_Relationship'
          required: true
      operationId: Updatequote_0
    delete:
      tags:
        - protagonist
      summary: Delete Quote from quote
      description: Delete Quote items from the Protagonist quote "to-many" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.quote body
          in: body
          description: Protagonist.quote POST model
          schema:
            $ref: '#/definitions/Protagonist.quote_Relationship1'
          required: true
      operationId: DeleteQuotefromquote_0
  '/protagonist/{ProtagonistId}/reference':
    get:
      tags:
        - protagonist
      summary: Retrieve Reference from reference
      description: Retrieve Reference items from the Protagonist reference "to-many" relationship
      parameters:
        - default: referenceType
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Reference relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Reference]'
          in: query
          format: string
          required: false
          description: Reference fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Reference filter
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveReferencefromreference_0
    post:
      tags:
        - protagonist
      summary: Add Reference items to reference
      description: Add Reference items to the Protagonist reference "to-many" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.reference body
          in: body
          description: Protagonist.reference POST model
          schema:
            $ref: '#/definitions/Protagonist.reference_Relationship1'
          required: true
      operationId: AddReferenceitemstoreference_0
    patch:
      tags:
        - protagonist
      summary: Update reference
      description: Update the Protagonist reference "to-many" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.reference body
          in: body
          description: Protagonist.reference POST model
          schema:
            $ref: '#/definitions/Protagonist.reference_Relationship'
          required: true
      operationId: Updatereference_0
    delete:
      tags:
        - protagonist
      summary: Delete Reference from reference
      description: Delete Reference items from the Protagonist reference "to-many" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: ProtagonistId
          in: path
          type: string
          default: 1
          description: Protagonist item
          required: true
        - name: Protagonist.reference body
          in: body
          description: Protagonist.reference POST model
          schema:
            $ref: '#/definitions/Protagonist.reference_Relationship1'
          required: true
      operationId: DeleteReferencefromreference_0
  /quote/:
    get:
      tags:
        - quote
      summary: Retrieve a collection of Quote objects
      parameters:
        - default: 'quoteType,reference,theme'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Quote relationships to include (csv)
        - default: 'title,details,typeID,dateUpdate'
          type: string
          name: 'fields[Quote]'
          in: query
          format: string
          required: false
          description: Quote fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,details,typeID,dateUpdate,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[details]'
          in: query
          format: string
          required: false
          description: details
        - default: ''
          type: string
          name: 'filter[typeID]'
          in: query
          format: string
          required: false
          description: typeID
        - default: ''
          type: string
          name: 'filter[dateUpdate]'
          in: query
          format: string
          required: false
          description: dateUpdate
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Quote filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Quote_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Quote from quote
      operationId: RetrieveaQuoteobject_0
    post:
      tags:
        - quote
      summary: Create Quote
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Quote attributes
          schema:
            $ref: '#/definitions/Quote_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateQuote_0
  /quote/search:
    post:
      tags:
        - quote
      description: Invoke Quote.search
      summary: Invoke Quote.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Quote_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Quote_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeQuotesearch_0
  '/quote/{QuoteId}/':
    get:
      tags:
        - quote
      summary: Retrieve a Quote object
      parameters:
        - default: 'quoteType,reference,theme'
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Quote relationships to include (csv)
        - default: 'title,details,typeID,dateUpdate'
          type: string
          name: 'fields[Quote]'
          in: query
          format: string
          required: false
          description: Quote fields to include (csv)
        - name: QuoteId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Quote from quote
      operationId: RetrieveaQuoteobject_1
    patch:
      tags:
        - quote
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Quote attributes
          schema:
            $ref: '#/definitions/Quote_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Quote
      description: Update Quote attributes
      operationId: UpdateQuote_0
    delete:
      tags:
        - quote
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Quote from quote
      operationId: DeleteQuotefromquote_1
  '/quote/{QuoteId}/quoteType':
    get:
      tags:
        - quote
      summary: Retrieve QuoteType from quoteType
      description: Retrieve QuoteType items from the Quote quoteType "to-one" relationship
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: QuoteType relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[QuoteType]'
          in: query
          format: string
          required: false
          description: QuoteType fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom QuoteType filter
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveQuoteTypefromquoteType_0
    post:
      tags:
        - quote
      summary: Add QuoteType items to quoteType
      description: Add QuoteType items to the Quote quoteType "to-one" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.quoteType body
          in: body
          description: Quote.quoteType POST model
          schema:
            $ref: '#/definitions/Quote.quoteType_Relationship1'
          required: true
      operationId: AddQuoteTypeitemstoquoteType_0
    patch:
      tags:
        - quote
      summary: Update quoteType
      description: Update the Quote quoteType "to-one" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.quoteType body
          in: body
          description: Quote.quoteType POST model
          schema:
            $ref: '#/definitions/Quote.quoteType_Relationship'
          required: true
      operationId: UpdatequoteType_0
    delete:
      tags:
        - quote
      summary: Delete QuoteType from quoteType
      description: Delete QuoteType items from the Quote quoteType "to-one" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.quoteType body
          in: body
          description: Quote.quoteType POST model
          schema:
            $ref: '#/definitions/Quote.quoteType_Relationship1'
          required: true
      operationId: DeleteQuoteTypefromquoteType_0
  '/quote/{QuoteId}/reference':
    get:
      tags:
        - quote
      summary: Retrieve Reference from reference
      description: Retrieve Reference items from the Quote reference "to-many" relationship
      parameters:
        - default: referenceType
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Reference relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Reference]'
          in: query
          format: string
          required: false
          description: Reference fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Reference filter
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveReferencefromreference_1
    post:
      tags:
        - quote
      summary: Add Reference items to reference
      description: Add Reference items to the Quote reference "to-many" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.reference body
          in: body
          description: Quote.reference POST model
          schema:
            $ref: '#/definitions/Quote.reference_Relationship1'
          required: true
      operationId: AddReferenceitemstoreference_1
    patch:
      tags:
        - quote
      summary: Update reference
      description: Update the Quote reference "to-many" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.reference body
          in: body
          description: Quote.reference POST model
          schema:
            $ref: '#/definitions/Quote.reference_Relationship'
          required: true
      operationId: Updatereference_1
    delete:
      tags:
        - quote
      summary: Delete Reference from reference
      description: Delete Reference items from the Quote reference "to-many" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.reference body
          in: body
          description: Quote.reference POST model
          schema:
            $ref: '#/definitions/Quote.reference_Relationship1'
          required: true
      operationId: DeleteReferencefromreference_1
  '/quote/{QuoteId}/theme':
    get:
      tags:
        - quote
      summary: Retrieve Theme from theme
      description: Retrieve Theme items from the Quote theme "to-many" relationship
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Theme relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[Theme]'
          in: query
          format: string
          required: false
          description: Theme fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Theme filter
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveThemefromtheme_0
    post:
      tags:
        - quote
      summary: Add Theme items to theme
      description: Add Theme items to the Quote theme "to-many" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.theme body
          in: body
          description: Quote.theme POST model
          schema:
            $ref: '#/definitions/Quote.theme_Relationship1'
          required: true
      operationId: AddThemeitemstotheme_0
    patch:
      tags:
        - quote
      summary: Update theme
      description: Update the Quote theme "to-many" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.theme body
          in: body
          description: Quote.theme POST model
          schema:
            $ref: '#/definitions/Quote.theme_Relationship'
          required: true
      operationId: Updatetheme_0
    delete:
      tags:
        - quote
      summary: Delete Theme from theme
      description: Delete Theme items from the Quote theme "to-many" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: QuoteId
          in: path
          type: string
          default: 1
          description: Quote item
          required: true
        - name: Quote.theme body
          in: body
          description: Quote.theme POST model
          schema:
            $ref: '#/definitions/Quote.theme_Relationship1'
          required: true
      operationId: DeleteThemefromtheme_0
  /quoteLinkType/:
    get:
      tags:
        - quoteLinkType
      summary: Retrieve a collection of QuoteLinkType objects
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: QuoteLinkType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[QuoteLinkType]'
          in: query
          format: string
          required: false
          description: QuoteLinkType fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom QuoteLinkType filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/QuoteLinkType_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve QuoteLinkType from quoteLinkType
      operationId: RetrieveaQuoteLinkTypeobject_0
    post:
      tags:
        - quoteLinkType
      summary: Create QuoteLinkType
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: QuoteLinkType attributes
          schema:
            $ref: '#/definitions/QuoteLinkType_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateQuoteLinkType_0
  /quoteLinkType/search:
    post:
      tags:
        - quoteLinkType
      description: Invoke QuoteLinkType.search
      summary: Invoke QuoteLinkType.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_QuoteLinkType_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_QuoteLinkType_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeQuoteLinkTypesearch_0
  '/quoteLinkType/{QuoteLinkTypeId}/':
    get:
      tags:
        - quoteLinkType
      summary: Retrieve a QuoteLinkType object
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: QuoteLinkType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[QuoteLinkType]'
          in: query
          format: string
          required: false
          description: QuoteLinkType fields to include (csv)
        - name: QuoteLinkTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve QuoteLinkType from quoteLinkType
      operationId: RetrieveaQuoteLinkTypeobject_1
    patch:
      tags:
        - quoteLinkType
      parameters:
        - name: QuoteLinkTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: QuoteLinkType attributes
          schema:
            $ref: '#/definitions/QuoteLinkType_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update QuoteLinkType
      description: Update QuoteLinkType attributes
      operationId: UpdateQuoteLinkType_0
    delete:
      tags:
        - quoteLinkType
      parameters:
        - name: QuoteLinkTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete QuoteLinkType from quoteLinkType
      operationId: DeleteQuoteLinkTypefromquoteLinkType_0
  /quoteType/:
    get:
      tags:
        - quoteType
      summary: Retrieve a collection of QuoteType objects
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: QuoteType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[QuoteType]'
          in: query
          format: string
          required: false
          description: QuoteType fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom QuoteType filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/QuoteType_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve QuoteType from quoteType
      operationId: RetrieveaQuoteTypeobject_0
    post:
      tags:
        - quoteType
      summary: Create QuoteType
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: QuoteType attributes
          schema:
            $ref: '#/definitions/QuoteType_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateQuoteType_0
  /quoteType/search:
    post:
      tags:
        - quoteType
      description: Invoke QuoteType.search
      summary: Invoke QuoteType.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_QuoteType_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_QuoteType_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeQuoteTypesearch_0
  '/quoteType/{QuoteTypeId}/':
    get:
      tags:
        - quoteType
      summary: Retrieve a QuoteType object
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: QuoteType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[QuoteType]'
          in: query
          format: string
          required: false
          description: QuoteType fields to include (csv)
        - name: QuoteTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve QuoteType from quoteType
      operationId: RetrieveaQuoteTypeobject_1
    patch:
      tags:
        - quoteType
      parameters:
        - name: QuoteTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: QuoteType attributes
          schema:
            $ref: '#/definitions/QuoteType_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update QuoteType
      description: Update QuoteType attributes
      operationId: UpdateQuoteType_0
    delete:
      tags:
        - quoteType
      parameters:
        - name: QuoteTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete QuoteType from quoteType
      operationId: DeleteQuoteTypefromquoteType_1
  /reference/:
    get:
      tags:
        - reference
      summary: Retrieve a collection of Reference objects
      parameters:
        - default: referenceType
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Reference relationships to include (csv)
        - default: 'title,details,url,date,typeID,reliability,dateUpdate'
          type: string
          name: 'fields[Reference]'
          in: query
          format: string
          required: false
          description: Reference fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,details,url,date,typeID,reliability,dateUpdate,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[details]'
          in: query
          format: string
          required: false
          description: details
        - default: ''
          type: string
          name: 'filter[url]'
          in: query
          format: string
          required: false
          description: url
        - default: ''
          type: string
          name: 'filter[date]'
          in: query
          format: string
          required: false
          description: date
        - default: ''
          type: string
          name: 'filter[typeID]'
          in: query
          format: string
          required: false
          description: typeID
        - default: ''
          type: string
          name: 'filter[reliability]'
          in: query
          format: string
          required: false
          description: reliability
        - default: ''
          type: string
          name: 'filter[dateUpdate]'
          in: query
          format: string
          required: false
          description: dateUpdate
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Reference filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Reference_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Reference from reference
      operationId: RetrieveaReferenceobject_0
    post:
      tags:
        - reference
      summary: Create Reference
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Reference attributes
          schema:
            $ref: '#/definitions/Reference_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateReference_0
  /reference/search:
    post:
      tags:
        - reference
      description: Invoke Reference.search
      summary: Invoke Reference.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Reference_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Reference_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeReferencesearch_0
  '/reference/{ReferenceId}/':
    get:
      tags:
        - reference
      summary: Retrieve a Reference object
      parameters:
        - default: referenceType
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Reference relationships to include (csv)
        - default: 'title,details,url,date,typeID,reliability,dateUpdate'
          type: string
          name: 'fields[Reference]'
          in: query
          format: string
          required: false
          description: Reference fields to include (csv)
        - name: ReferenceId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Reference from reference
      operationId: RetrieveaReferenceobject_1
    patch:
      tags:
        - reference
      parameters:
        - name: ReferenceId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Reference attributes
          schema:
            $ref: '#/definitions/Reference_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Reference
      description: Update Reference attributes
      operationId: UpdateReference_0
    delete:
      tags:
        - reference
      parameters:
        - name: ReferenceId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Reference from reference
      operationId: DeleteReferencefromreference_2
  '/reference/{ReferenceId}/referenceType':
    get:
      tags:
        - reference
      summary: Retrieve ReferenceType from referenceType
      description: Retrieve ReferenceType items from the Reference referenceType "to-one" relationship
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: ReferenceType relationships to include (csv)
        - default: ''
          type: string
          name: 'fields[ReferenceType]'
          in: query
          format: string
          required: false
          description: ReferenceType fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: id
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: '{} attribute filter.. (csv)'
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom ReferenceType filter
        - name: ReferenceId
          in: path
          type: string
          default: 1
          description: Reference item
          required: true
      responses:
        '200':
          description: 'Request fulfilled, document follows'
        '404':
          description: Nothing matches the given URI
      operationId: RetrieveReferenceTypefromreferenceType_0
    post:
      tags:
        - reference
      summary: Add ReferenceType items to referenceType
      description: Add ReferenceType items to the Reference referenceType "to-one" relationship
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ReferenceId
          in: path
          type: string
          default: 1
          description: Reference item
          required: true
        - name: Reference.referenceType body
          in: body
          description: Reference.referenceType POST model
          schema:
            $ref: '#/definitions/Reference.referenceType_Relationship1'
          required: true
      operationId: AddReferenceTypeitemstoreferenceType_0
    patch:
      tags:
        - reference
      summary: Update referenceType
      description: Update the Reference referenceType "to-one" relationship
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      parameters:
        - name: ReferenceId
          in: path
          type: string
          default: 1
          description: Reference item
          required: true
        - name: Reference.referenceType body
          in: body
          description: Reference.referenceType POST model
          schema:
            $ref: '#/definitions/Reference.referenceType_Relationship'
          required: true
      operationId: UpdatereferenceType_0
    delete:
      tags:
        - reference
      summary: Delete ReferenceType from referenceType
      description: Delete ReferenceType items from the Reference referenceType "to-one" relationship
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - name: ReferenceId
          in: path
          type: string
          default: 1
          description: Reference item
          required: true
        - name: Reference.referenceType body
          in: body
          description: Reference.referenceType POST model
          schema:
            $ref: '#/definitions/Reference.referenceType_Relationship1'
          required: true
      operationId: DeleteReferenceTypefromreferenceType_0
  /referenceType/:
    get:
      tags:
        - referenceType
      summary: Retrieve a collection of ReferenceType objects
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: ReferenceType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[ReferenceType]'
          in: query
          format: string
          required: false
          description: ReferenceType fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom ReferenceType filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/ReferenceType_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve ReferenceType from referenceType
      operationId: RetrieveaReferenceTypeobject_0
    post:
      tags:
        - referenceType
      summary: Create ReferenceType
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: ReferenceType attributes
          schema:
            $ref: '#/definitions/ReferenceType_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateReferenceType_0
  /referenceType/search:
    post:
      tags:
        - referenceType
      description: Invoke ReferenceType.search
      summary: Invoke ReferenceType.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_ReferenceType_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_ReferenceType_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeReferenceTypesearch_0
  '/referenceType/{ReferenceTypeId}/':
    get:
      tags:
        - referenceType
      summary: Retrieve a ReferenceType object
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: ReferenceType relationships to include (csv)
        - default: title
          type: string
          name: 'fields[ReferenceType]'
          in: query
          format: string
          required: false
          description: ReferenceType fields to include (csv)
        - name: ReferenceTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve ReferenceType from referenceType
      operationId: RetrieveaReferenceTypeobject_1
    patch:
      tags:
        - referenceType
      parameters:
        - name: ReferenceTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: ReferenceType attributes
          schema:
            $ref: '#/definitions/ReferenceType_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update ReferenceType
      description: Update ReferenceType attributes
      operationId: UpdateReferenceType_0
    delete:
      tags:
        - referenceType
      parameters:
        - name: ReferenceTypeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete ReferenceType from referenceType
      operationId: DeleteReferenceTypefromreferenceType_1
  /theme/:
    get:
      tags:
        - theme
      summary: Retrieve a collection of Theme objects
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Theme relationships to include (csv)
        - default: title
          type: string
          name: 'fields[Theme]'
          in: query
          format: string
          required: false
          description: Theme fields to include (csv)
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - default: 'title,id'
          type: string
          name: sort
          in: query
          format: string
          required: false
          description: Sort order
        - default: ''
          type: string
          name: 'filter[title]'
          in: query
          format: string
          required: false
          description: title
        - default: ''
          type: string
          name: 'filter[id]'
          in: query
          format: string
          required: false
          description: id
        - default: ''
          type: string
          name: filter
          in: query
          format: string
          required: false
          description: Custom Theme filter
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/Theme_get_coll'
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Theme from theme
      operationId: RetrieveaThemeobject_0
    post:
      tags:
        - theme
      summary: Create Theme
      parameters:
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: POST body
          in: body
          description: Theme attributes
          schema:
            $ref: '#/definitions/Theme_post_inst1'
          required: true
      responses:
        '201':
          description: Created
        '202':
          description: Accepted
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      operationId: CreateTheme_0
  /theme/search:
    post:
      tags:
        - theme
      description: Invoke Theme.search
      summary: Invoke Theme.search
      responses:
        '200':
          description: 'Request fulfilled, document follows'
      parameters:
        - default: 0
          type: integer
          name: 'page[offset]'
          in: query
          format: int64
          required: false
          description: Page offset
        - default: 10
          type: integer
          name: 'page[limit]'
          in: query
          format: int64
          required: false
          description: Max number of items
        - name: post_Theme_search
          in: body
          description: lookup column names
          schema:
            $ref: '#/definitions/post_Theme_search'
          required: true
      produces:
        - application/vnd.api+json
      operationId: InvokeThemesearch_0
  '/theme/{ThemeId}/':
    get:
      tags:
        - theme
      summary: Retrieve a Theme object
      parameters:
        - default: ''
          type: string
          name: include
          in: query
          format: string
          required: false
          description: Theme relationships to include (csv)
        - default: title
          type: string
          name: 'fields[Theme]'
          in: query
          format: string
          required: false
          description: Theme fields to include (csv)
        - name: ThemeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          schema: {}
          description: 'Request fulfilled, document follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      description: Retrieve Theme from theme
      operationId: RetrieveaThemeobject_1
    patch:
      tags:
        - theme
      parameters:
        - name: ThemeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
        - name: PATCH body
          in: body
          description: Theme attributes
          schema:
            $ref: '#/definitions/Theme_patch_inst'
          required: true
      responses:
        '200':
          description: Accepted
        '201':
          description: Created
        '204':
          description: No Content
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
      produces:
        - application/vnd.api+json
      summary: Update Theme
      description: Update Theme attributes
      operationId: UpdateTheme_0
    delete:
      tags:
        - theme
      parameters:
        - name: ThemeId
          in: path
          type: string
          default: 1
          required: true
        - name: Content-Type
          in: header
          type: string
          default: application/vnd.api+json
          enum:
            - application/vnd.api+json
            - application/json
          required: true
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: 'Request fulfilled, nothing follows'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      produces:
        - application/vnd.api+json
      summary: Delete Theme from theme
      operationId: DeleteThemefromtheme_1
definitions:
  post_Company_search:
    properties:
      meta:
        $ref: '#/definitions/Company_search1'
  Company_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Company_get_coll:
    properties:
      data:
        example:
          - attributes:
              protagonistID: 0
              siret: ''
              dateUpdate: '2020-04-04 16:06:53.933318'
            type: Company
            id: ''
        type: string
  Company_post_inst1:
    properties:
      data:
        example:
          attributes:
            protagonistID: 0
            siret: ''
            dateUpdate: '2020-04-04 16:06:53.923104'
          type: Company
        type: string
  Company_patch_inst:
    properties:
      data:
        example:
          attributes:
            protagonistID: 0
            siret: ''
            dateUpdate: '2020-04-04 16:06:53.913742'
          type: Company
          id: ''
        type: string
  Company.protagonist_Relationship1:
    properties:
      data:
        example:
          type: Protagonist
          id: 1
        type: string
  Company.protagonist_Relationship:
    properties:
      data:
        example:
          type: Protagonist
          id: 1
        type: string
  post_Person_search:
    properties:
      meta:
        $ref: '#/definitions/Person_search1'
  Person_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Person_get_coll:
    properties:
      data:
        example:
          - attributes:
              protagonistID: 0
              surname: ''
              role: ''
              dateUpdate: '2020-04-04 16:06:54.025894'
            type: Person
            id: 1
        type: string
  Person_post_inst1:
    properties:
      data:
        example:
          attributes:
            protagonistID: 0
            surname: ''
            role: ''
            dateUpdate: '2020-04-04 16:06:54.011502'
          type: Person
        type: string
  Person_patch_inst:
    properties:
      data:
        example:
          attributes:
            protagonistID: 0
            surname: ''
            role: ''
            dateUpdate: '2020-04-04 16:06:53.996473'
          type: Person
          id: 1
        type: string
  Person.protagonist_Relationship1:
    properties:
      data:
        example:
          type: Protagonist
          id: 1
        type: string
  Person.protagonist_Relationship:
    properties:
      data:
        example:
          type: Protagonist
          id: 1
        type: string
  post_Protagonist_search:
    properties:
      meta:
        $ref: '#/definitions/Protagonist_search1'
  Protagonist_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Protagonist_get_coll:
    properties:
      data:
        example:
          - attributes:
              name: ''
              link: ''
              photo: ''
              dateUpdate: '2020-04-04 16:06:54.118222'
            type: Protagonist
            id: 1
        type: string
  Protagonist_post_inst1:
    properties:
      data:
        example:
          attributes:
            name: ''
            link: ''
            photo: ''
            dateUpdate: '2020-04-04 16:06:54.104471'
          type: Protagonist
        type: string
  Protagonist_patch_inst:
    properties:
      data:
        example:
          attributes:
            name: ''
            link: ''
            photo: ''
            dateUpdate: '2020-04-04 16:06:54.089483'
          type: Protagonist
          id: 1
        type: string
  Protagonist.quote_Relationship1:
    properties:
      data:
        example:
          - type: Quote
            id: 1
        type: string
  Protagonist.quote_Relationship:
    properties:
      data:
        example:
          - type: Quote
            id: 1
        type: string
  Protagonist.reference_Relationship1:
    properties:
      data:
        example:
          - type: Reference
            id: 1
        type: string
  Protagonist.reference_Relationship:
    properties:
      data:
        example:
          - type: Reference
            id: 1
        type: string
  post_Quote_search:
    properties:
      meta:
        $ref: '#/definitions/Quote_search1'
  Quote_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Quote_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
              details: ''
              typeID: 0
              dateUpdate: '2020-04-04 16:06:54.256013'
            type: Quote
            id: 1
        type: string
  Quote_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
            details: ''
            typeID: 0
            dateUpdate: '2020-04-04 16:06:54.241702'
          type: Quote
        type: string
  Quote_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
            details: ''
            typeID: 0
            dateUpdate: '2020-04-04 16:06:54.227205'
          type: Quote
          id: 1
        type: string
  Quote.quoteType_Relationship1:
    properties:
      data:
        example:
          type: QuoteType
          id: 1
        type: string
  Quote.quoteType_Relationship:
    properties:
      data:
        example:
          type: QuoteType
          id: 1
        type: string
  Quote.reference_Relationship1:
    properties:
      data:
        example:
          - type: Reference
            id: 1
        type: string
  Quote.reference_Relationship:
    properties:
      data:
        example:
          - type: Reference
            id: 1
        type: string
  Quote.theme_Relationship1:
    properties:
      data:
        example:
          - type: Theme
            id: 1
        type: string
  Quote.theme_Relationship:
    properties:
      data:
        example:
          - type: Theme
            id: 1
        type: string
  post_QuoteLinkType_search:
    properties:
      meta:
        $ref: '#/definitions/QuoteLinkType_search1'
  QuoteLinkType_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  QuoteLinkType_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
            type: QuoteLinkType
            id: 1
        type: string
  QuoteLinkType_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: QuoteLinkType
        type: string
  QuoteLinkType_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: QuoteLinkType
          id: 1
        type: string
  post_QuoteType_search:
    properties:
      meta:
        $ref: '#/definitions/QuoteType_search1'
  QuoteType_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  QuoteType_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
            type: QuoteType
            id: 1
        type: string
  QuoteType_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: QuoteType
        type: string
  QuoteType_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: QuoteType
          id: 1
        type: string
  post_Reference_search:
    properties:
      meta:
        $ref: '#/definitions/Reference_search1'
  Reference_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Reference_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
              details: ''
              url: ''
              date: '2020-04-04'
              typeID: 0
              reliability: 0
              dateUpdate: '2020-04-04 16:06:54.523404'
            type: Reference
            id: 1
        type: string
  Reference_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
            details: ''
            url: ''
            date: '2020-04-04'
            typeID: 0
            reliability: 0
            dateUpdate: '2020-04-04 16:06:54.508669'
          type: Reference
        type: string
  Reference_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
            details: ''
            url: ''
            date: '2020-04-04'
            typeID: 0
            reliability: 0
            dateUpdate: '2020-04-04 16:06:54.493216'
          type: Reference
          id: 1
        type: string
  Reference.referenceType_Relationship1:
    properties:
      data:
        example:
          type: ReferenceType
          id: 1
        type: string
  Reference.referenceType_Relationship:
    properties:
      data:
        example:
          type: ReferenceType
          id: 1
        type: string
  post_ReferenceType_search:
    properties:
      meta:
        $ref: '#/definitions/ReferenceType_search1'
  ReferenceType_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  ReferenceType_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
            type: ReferenceType
            id: 1
        type: string
  ReferenceType_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: ReferenceType
        type: string
  ReferenceType_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: ReferenceType
          id: 1
        type: string
  post_Theme_search:
    properties:
      meta:
        $ref: '#/definitions/Theme_search1'
  Theme_search1:
    properties:
      method:
        example: search
        type: string
      args:
        example:
          col_name: value
        type: string
  Theme_get_coll:
    properties:
      data:
        example:
          - attributes:
              title: ''
            type: Theme
            id: 1
        type: string
  Theme_post_inst1:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: Theme
        type: string
  Theme_patch_inst:
    properties:
      data:
        example:
          attributes:
            title: ''
          type: Theme
          id: 1
        type: string
tags:
  - name: company
  - name: person
  - name: protagonist
  - name: quote
  - name: quoteLinkType
  - name: quoteType
  - name: reference
  - name: referenceType
  - name: theme
