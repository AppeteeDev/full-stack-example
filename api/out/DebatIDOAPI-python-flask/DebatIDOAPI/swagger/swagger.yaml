openapi: 3.0.0
info:
  title: Débats IDO API
  description: API of Débats IDO Project
  version: 1.0.0
servers:
- url: /
  description: Optional server description, e.g. Internal staging server for testing
security:
- ApiKeyAuth: []
paths:
  /quotes:
    get:
      tags:
      - Quotes
      summary: Get all quotes
      description: This operation supports pagination
      operationId: quotes_get
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: A list of quotes
        default:
          description: A list of quotes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteModel'
                x-content-type: application/json
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
    post:
      tags:
      - Quotes
      summary: Add a new quote
      operationId: quotes_post
      requestBody:
        $ref: '#/components/requestBodies/newQuoteItem'
      responses:
        "201":
          description: Created
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
  /quotes/{idQuote}/:
    get:
      tags:
      - Quotes
      summary: Get one specific quote
      description: Test
      operationId: quotes_id_quote_get
      parameters:
      - name: idQuote
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: A specific quote
        default:
          description: A quote
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteModel'
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
    delete:
      tags:
      - Quotes
      summary: Delete one specific quote
      description: Test
      operationId: quotes_id_quote_delete
      parameters:
      - name: idQuote
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Quote successfully deleted
        "401":
          description: Unauthorized
        default:
          description: An error occurred
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
  /quotes/{idQuote}/childs:
    get:
      tags:
      - Quotes
      summary: Get list of childs of specific quote
      description: This operation supports pagination
      operationId: quotes_id_quote_childs_get
      parameters:
      - name: idQuote
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: A list of childs quotes
        default:
          description: A list of quotes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteModel'
                x-content-type: application/json
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
  /quotes/{idQuote}/parents:
    get:
      tags:
      - Quotes
      summary: Get list of parents of specific quote
      description: This operation supports pagination
      operationId: quotes_id_quote_parents_get
      parameters:
      - name: idQuote
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: A list of parents quotes
        default:
          description: A list of quotes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteModel'
                x-content-type: application/json
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
  /quotes/{idQuote}/references:
    get:
      tags:
      - Quotes
      - References
      summary: Get list of references of specific quote
      description: This operation supports pagination
      operationId: quotes_id_quote_references_get
      parameters:
      - name: idQuote
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: A list of references
        default:
          description: A list of references
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceModel'
                x-content-type: application/json
      x-openapi-router-controller: DebatIDOAPI.controllers.quotes_controller
  /references:
    get:
      tags:
      - References
      summary: Get all references
      description: This operation supports pagination
      operationId: references_get
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before returning the results
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: A list of references
        default:
          description: A list of references
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferenceModel'
                x-content-type: application/json
      x-openapi-router-controller: DebatIDOAPI.controllers.references_controller
    post:
      tags:
      - References
      summary: Add a new reference
      operationId: references_post
      requestBody:
        $ref: '#/components/requestBodies/newReferenceItem'
      responses:
        "201":
          description: Created
      x-openapi-router-controller: DebatIDOAPI.controllers.references_controller
  /references/{idReference}/:
    get:
      tags:
      - References
      summary: Get one specific reference
      description: Test
      operationId: references_id_reference_get
      parameters:
      - name: idReference
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: A specific reference
        default:
          description: A reference
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceModel'
      x-openapi-router-controller: DebatIDOAPI.controllers.references_controller
    delete:
      tags:
      - References
      summary: Delete one specific reference
      description: Test
      operationId: references_id_reference_delete
      parameters:
      - name: idReference
        in: path
        description: The Id of a Quote
        required: true
        style: simple
        explode: false
        schema:
          minimum: 0
          type: integer
      responses:
        "200":
          description: Reference successfully deleted
        "401":
          description: Unauthorized
        default:
          description: An error occurred
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-openapi-router-controller: DebatIDOAPI.controllers.references_controller
components:
  schemas:
    ErrorModel:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    QuoteModel:
      required:
      - complete
      - id
      - name
      - text
      - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        text:
          type: string
        type:
          type: string
        complete:
          type: number
          format: float
      example:
        id: 42
        name: Une réduction de la pauvreté
        text: Permet de réduire drastiquement le nombre de personnes vivant sous le
          seuil de pauvreté
        type: Opinion
        complete: 0
    QuoteNewModel:
      required:
      - complete
      - name
      - text
      - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        text:
          type: string
        type:
          type: string
        complete:
          type: number
          format: float
      example:
        name: Une réduction de la pauvreté
        text: Permet de réduire drastiquement le nombre de personnes vivant sous le
          seuil de pauvreté
        type: Opinion
        complete: 0
    ReferenceModel:
      required:
      - date
      - id
      - link
      - name
      - nature
      - reliability
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        link:
          type: string
        nature:
          type: string
        date:
          type: string
        reliability:
          type: integer
          format: int32
      example:
        id: 42
        name: Baptiste Mylondo
        title: Un revenu pour tous ! Précis d'utopie réaliste.
        link: https://www.revenudebase.info/wp-content/uploads/2012/07/Mylondo-Baptiste_precise-utopie-realiste.pdf
        nature: Précis
        date: 2010-01-01
        reliability: 50
    ReferenceNewModel:
      required:
      - date
      - link
      - name
      - nature
      - reliability
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        link:
          type: string
        nature:
          type: string
        date:
          type: string
        reliability:
          type: integer
          format: int32
      example:
        name: Baptiste Mylondo
        title: Un revenu pour tous ! Précis d'utopie réaliste.
        link: https://www.revenudebase.info/wp-content/uploads/2012/07/Mylondo-Baptiste_precise-utopie-realiste.pdf
        nature: Précis
        date: 2010-01-01
        reliability: 50
  responses:
    GeneralError:
      description: An error occurred
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    Quote:
      description: A quote
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteModel'
    QuoteList:
      description: A list of quotes
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteModel'
            x-content-type: application/json
    Reference:
      description: A reference
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceModel'
    ReferenceList:
      description: A list of references
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReferenceModel'
            x-content-type: application/json
  parameters:
    idQuoteParam:
      name: idQuote
      in: path
      description: The Id of a Quote
      required: true
      style: simple
      explode: false
      schema:
        minimum: 0
        type: integer
    idReferenceParam:
      name: idReference
      in: path
      description: The Id of a Quote
      required: true
      style: simple
      explode: false
      schema:
        minimum: 0
        type: integer
    offsetParam:
      name: offset
      in: query
      description: The number of items to skip before returning the results
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
    limitParam:
      name: limit
      in: query
      description: The number of items to return
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 20
  requestBodies:
    newQuoteItem:
      description: A JSON object containing quote data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuoteNewModel'
      required: true
    newReferenceItem:
      description: A JSON object containing reference data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceNewModel'
      required: true
  headers:
    X-RateLimit-Limit:
      description: Request limit per hour
      style: simple
      explode: false
      schema:
        type: integer
      example: 100
    X-RateLimit-Remaining:
      description: Remaining requests for the hour
      style: simple
      explode: false
      schema:
        type: integer
      example: 94
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: API_KEY
      in: header
      x-apikeyInfoFunc: DebatIDOAPI.controllers.authorization_controller.check_ApiKeyAuth

