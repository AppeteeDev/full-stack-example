# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from DebatIDOAPI.models.base_model_ import Model
from DebatIDOAPI import util


class Company(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, siret=None, date_update=None):  # noqa: E501
        """Company - a model defined in OpenAPI

        :param id: The id of this Company.  # noqa: E501
        :type id: int
        :param siret: The siret of this Company.  # noqa: E501
        :type siret: str
        :param date_update: The date_update of this Company.  # noqa: E501
        :type date_update: str
        """
        self.openapi_types = {
            'id': int,
            'siret': str,
            'date_update': str
        }

        self.attribute_map = {
            'id': 'id',
            'siret': 'siret',
            'date_update': 'dateUpdate'
        }

        self._id = id
        self._siret = siret
        self._date_update = date_update

    @classmethod
    def from_dict(cls, dikt) -> 'Company':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The company of this Company.  # noqa: E501
        :rtype: Company
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Company.


        :return: The id of this Company.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Company.


        :param id: The id of this Company.
        :type id: int
        """

        self._id = id

    @property
    def siret(self):
        """Gets the siret of this Company.


        :return: The siret of this Company.
        :rtype: str
        """
        return self._siret

    @siret.setter
    def siret(self, siret):
        """Sets the siret of this Company.


        :param siret: The siret of this Company.
        :type siret: str
        """

        self._siret = siret

    @property
    def date_update(self):
        """Gets the date_update of this Company.


        :return: The date_update of this Company.
        :rtype: str
        """
        return self._date_update

    @date_update.setter
    def date_update(self, date_update):
        """Sets the date_update of this Company.


        :param date_update: The date_update of this Company.
        :type date_update: str
        """

        self._date_update = date_update
